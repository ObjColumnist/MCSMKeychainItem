# MCSMKeychainItem

## MCSMGenericKeychainItem

*MCSMKeychainItem* (or more specifically *MCSMGenericKeychainItem*) allows you to *create*, *fetch* and *remove* Keychain Items from the Keychain on iOS and OS X using the same simple Objective-C API.

Generic Keychain Item allows you to store a *Username* and *Password* for a given *Service*. Doing this with *MCSMGenericKeychainItem* is easy:

	//First Check to see if a Generic Keychain Item for the Service and Username already exists

	MCSMGenericKeychainItem *existingKeychainItem = [MCSMGenericKeychainItem genericKeychainItemForService:service username:username];

	//If a Generic Keychain Item already exists remove it to prevent duplicates
	if(existingKeychainItem)
	{
	  [existingKeychainItem removeFromKeychain];
	}

	//Add the new Generic Keychain Item                             
	[MCSMGenericKeychainItem genericKeychainItemWithService:service username:username password:password];


When you want to *fetch* the Generic Keychain Item for a *Service* and *Username* you need to do:

	MCSMGenericKeychainItem *keychainItem = [MCSMGenericKeychainItem genericKeychainItemForService:service username:username];

You can then get the password using the password property:

	NSString *password = keychainItem.password;

And to *remove* it from the Keychain just call removeFromKeychain:

	[keychainItem removeFromKeychain];

## MCSMUUIDKeychainItem

Apple have deprecated the unique identifier API that returns the UDID for a device in iOS 5.0.

You can however generate a *UUID* using the CoreFoundation `CFUUIDCreateString` API

The important thing to realize is that this API (by design) generates a different UUID everytime you call it. This means that you can't uniquely identify a device by simply replacing `[UIDevice uniqueIdentifier]` with `CFUUIDCreateString`.

MCSMUUIDKeychainItem's approach is to generate a UUID on first call of the API and then store it into the device's keychain. This means that the UUID will not change between launches of the application and storing it in the keychain means it persists between reinstalls of the application. However the UUID will be deleted if the user restores their device, along with every other keychain item.

If all you want is have a replacement for UIDevice's uniqueIdentifier API, then all you need to do replace it with MCSMUUIDKeychainItem's `applicationUUID` API.

	NSString *UUID = [MCSMUUIDKeychainItem applicationUUID];

The first time this API is called it with generate a UUID and store it in the keychain. Subsequent calls will return the previously generated UUID.

If you need more control you can retrieve the UUID keychain item using:

	MCSMUUIDKeychainItem *applicationUUIDKeychainItem = [MCSMUUIDKeychainItem applicationUUIDKeychainItem];

Then get the UUID using the UUID property:

	NSString *UUID = applicationUUIDKeychainItem.UUID

If one doesn't exist you can generate one:

	MCSMUUIDKeychainItem *applicationUUIDKeychainItem = [MCSMUUIDKeychainItem generateApplicationUUIDKeychainItem];

And you can remove it using:

	[applicationUUIDKeychainItem removeFromKeychain];















